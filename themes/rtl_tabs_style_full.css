/*! This style sheet was autogenerated using gulp + scss
 *  For usage instructions, see: https://github.com/openemr/openemr/blob/master/interface/README.md
 */
.oe-expandable-search button.btn-search1{padding:4px 6px 4px 0!important;right:0}.oe-expandable-search button.btn-globals-legacy{right:110px}.oe-expandable-search button.btn-globals-modern{right:0}.oe-expandable-search input:focus~button.btn-search1{outline:0;right:245px}.appMenu_small .menuSection>.menuEntries{right:40px!important}html{border:0;height:100%;padding:0}body,html{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-direction:normal}#mainBox,#mainBox>div.mainFrames,body,html{-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:0}#mainBox,#mainBox_vertical,body{-webkit-box-flex:1;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto}#mainBox,#mainBox_vertical{-webkit-align-content:space-between;-ms-flex-line-pack:justify;align-content:space-between;-webkit-box-align:stretch;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch}#mainBox{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-direction:normal;width:100%}#mainBox .logo{height:20px;margin-top:.1875rem;padding:0;width:20px;z-index:10000}#mainBox_vertical{margin:0;padding:0}#mainBox_vertical .logo{height:30px;margin:.5rem .75rem;padding:0!important;width:30px;z-index:10000}#mainBox>div{-webkit-box-flex:0;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;margin:0}#mainBox>div.mainFrames{padding:0;z-index:3}#framesDisplay,#framesDisplay>div,#mainBox>div.mainFrames,.tabControls{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-direction:normal}#framesDisplay{-webkit-box-orient:horizontal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}#framesDisplay>div,.tabControls{margin:0}#framesDisplay,#framesDisplay>div,#framesDisplay>div>iframe,#mainBox>div.mainFrames{-webkit-box-flex:1;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto}#framesDisplay>div{-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;-webkit-box-align:stretch;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:0}#framesDisplay>div>iframe{border:0 solid var(--black);width:100%}.tabControls{background:var(--light);-webkit-box-orient:horizontal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;overflow:auto;padding:4px 0 0}.tabSpan{border-bottom:0;border-left:1px solid var(--primary);border-right:1px solid var(--primary);border-top:4px solid var(--primary);cursor:pointer;-webkit-box-flex:0;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;font-size:.9rem;margin:0;overflow:visible;padding:8px;white-space:nowrap}.tabHidden,.tabSpan .fa{color:var(--gray)}.tabNotchosen,.tabsNoHover{border-bottom:1px solid var(--primary);border-left:0;border-right:0;display:block}.tabNotchosen{background-color:transparent!important;border-top:4px solid transparent!important}.tabNotchosen:hover{background:var(--light)}.tabsNoHover{background:0 0!important;border-top:4px solid transparent}#attendantData{background-color:var(--light)}.patientCurrentEncounter a,.patientInfo a{color:var(--dark)!important}.patientPicture{margin-left:7px;margin-top:-1px}.patientPicture img{height:75px}.patientCurrentEncounter{display:inline}.patientDataColumn{display:block;float:right;width:33%}.messagesColumn{float:left;padding-left:20px}.patientEncounterList{background:var(--white);border:1px solid var(--black);cursor:pointer;overflow:hidden;position:fixed;z-index:1}.patientEncounterList table.encounters{display:none}.patientEncounterList:hover table.encounters{display:block}.patientEncounterList>div{padding:2px}.patientEncounterList:hover{height:auto;overflow:visible;z-index:4}#username>.userfunctions>div:hover,.patientEncounterList table.encounters td:hover,.patientEncounterList>div:hover,.patientInfo .clear:hover i{color:var(--danger)}.patientEncounterList .review{background-color:var(--gray);border:1px solid var(--black);border-radius:5px;padding:2px}#userData{float:left;position:relative}.patientInfo{padding:1px 1px 1px 10px}.top{vertical-align:top}.appMenu>span{float:right}.appMenu>span,.appMenu_small>span{padding:0;white-space:nowrap}.appMenu .appMenu>span:hover,.appMenu>span:hover{background-color:var(--primary);color:var(--white);text-decoration:none;text-shadow:none}.appMenu ul,.appMenu_small ul{list-style:none;margin:0;padding:1px 5px 2px 1px}.appMenu li:hover>.menuDisabled{background-color:transparent}.appMenu_small .menuLabel{padding:.625rem}.appMenu .oe-show{display:none}.appMenu_small .oe-show{display:block}.menuSection{position:relative}.menuSection:hover{background-color:#cce3f8}.menuSection>.menuEntries{box-shadow:0 5px 5px var(--gray);display:none;min-width:175px;padding:0;position:absolute;top:40px;white-space:nowrap;z-index:1000}.menuSection>.menuEntries .menuEntries{display:none;position:absolute;top:-3px;right:161px}.menuSection:hover>.menuEntries{display:block}.menu-shadow-ovr{box-shadow:0 5px 5px var(--gray)!important}.menuLabel{color:var(--dark);font-weight:700;padding:.9375rem .625rem;-webkit-transition:background-color .1s ease;transition:background-color .1s ease;width:100%}.menuLabel:hover{background:#cce3f8;color:var(--dark)}div.menuLabel:hover{cursor:default!important}.menuEntries li .menuLabel{display:block;float:none;padding:10px 20px}.menuEntries li .menuLabel:hover{background-color:#cce3f8;color:var(--dark)}.logo{padding:10px 0}.menuDisabled{background-color:transparent;color:var(--gray)!important;pointer-events:none}#username{cursor:pointer}.userSection{min-width:200px;left:10px}.body_title,.body_top{background-color:var(--light)}.body_top{color:var(--dark);margin:0;padding:0;z-index:10}.body_title{color:var(--black);padding:10px 0 0}#username:hover>.userfunctions{display:block;width:98%}.menu_arrow{bottom:0;margin:7px 7px 2px}.topToolbarRight{border-top:0}.closeButton{display:inline-block;float:left;position:relative;left:5px}.float-element{float:right}#logout_icon,#menu_icon{cursor:pointer;margin:12px 5px 0 10px}#menu_icon{margin:12px 25px}#patient_caret{font-size:2rem;margin-top:-5px}@media (max-width:768px){.mainFrames{margin:0;padding-right:1px}#framesDisplay>div{height:100vh;width:100%}}#mainBox{padding:0 5px 0 0!important}#mainBox .logo{float:right!important;margin:3px 10px 0 4px!important}#attendantData .patientDataColumn:nth-child(1) span{float:right;margin-left:12px;margin-right:5px}#attendantData .patientDataColumn{float:right}#attendantData .patientDataColumn:nth-child(1) .patientInfo .ptName span{float:none}#attendantData .patientDataColumn:nth-child(1) .patientInfo .ptName span:nth-child(2){margin:2px}.appMenu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;float:right;margin-right:0;position:relative}.closeButton{padding-right:7px;right:0;top:12px;-webkit-transform:scaleX(-1);-ms-transform:scaleX(-1);transform:scaleX(-1)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
